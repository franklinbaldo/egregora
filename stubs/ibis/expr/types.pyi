from typing import Any, Iterable, Mapping, Sequence

class Table:
    def __getattr__(self, name: str) -> Any: ...
    def __getitem__(self, key: Any) -> Any: ...
    def to_pyarrow(self) -> Any: ...
    def to_pandas(self) -> Any: ...
    def iter_rows(self, *, named: bool = ...) -> Iterable[Mapping[str, Any]]: ...
    def count(self, *args: Any, **kwargs: Any) -> Any: ...
    def columns(self) -> Sequence[str]: ...
    def mutate(self, *args: Any, **kwargs: Any) -> Table: ...
    def select(self, *args: Any, **kwargs: Any) -> Table: ...
    def filter(self, *args: Any, **kwargs: Any) -> Table: ...
    def union(self, *tables: Table, **kwargs: Any) -> Table: ...
    def order_by(self, *args: Any, **kwargs: Any) -> Table: ...
    def execute(self, *args: Any, **kwargs: Any) -> Any: ...
    def schema(self) -> Any: ...
    def column(self, name: str) -> Any: ...
    def num_rows(self) -> int: ...

    @classmethod
    def from_arrays(cls, data: Any, schema: Any | None = ...) -> Table: ...

    @classmethod
    def from_pydict(cls, data: Mapping[str, Sequence[Any]], schema: Any | None = ...) -> Table: ...

    @classmethod
    def from_pandas(cls, frame: Any) -> Table: ...
