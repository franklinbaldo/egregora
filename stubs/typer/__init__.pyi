from typing import Any, Callable, ParamSpec, TypeVar

_P = ParamSpec("_P")
_T = TypeVar("_T")

class Typer:
    def __init__(self, *args: Any, **kwargs: Any) -> None: ...
    def command(self, *args: Any, **kwargs: Any) -> Callable[[Callable[_P, _T]], Callable[_P, _T]]: ...
    def callback(self, *args: Any, **kwargs: Any) -> Callable[[Callable[_P, _T]], Callable[_P, _T]]: ...
    def __call__(self, *args: Any, **kwargs: Any) -> Any: ...

def Argument(*args: Any, **kwargs: Any) -> Any: ...
def Option(*args: Any, **kwargs: Any) -> Any: ...

class Exit(SystemExit):
    def __init__(self, code: int = ...) -> None: ...

def confirm(*args: Any, **kwargs: Any) -> bool: ...
