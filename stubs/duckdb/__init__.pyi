from typing import Any, Iterable, Sequence

class DuckDBPyRelation:
    def fetchone(self) -> Sequence[Any] | None: ...
    def fetchall(self) -> list[Sequence[Any]]: ...
    def arrow(self) -> Any: ...
    def __iter__(self) -> Iterable[Sequence[Any]]: ...

class DuckDBPyConnection:
    def execute(self, query: str, parameters: Sequence[Any] | None = ...) -> DuckDBPyRelation: ...
    def close(self) -> None: ...


def connect(
    database: str | None = ...,
    *,
    read_only: bool = ...,
    config: dict[str, Any] | None = ...,
) -> DuckDBPyConnection: ...
