name: Auto Code Review on Push

on:
  push:
    branches:
      - 'claude/**'
      - 'feature/**'
      - 'fix/**'

jobs:
  auto-review:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Find PR for this branch
        id: find-pr
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const branch = context.ref.replace('refs/heads/', '');
            console.log(`Looking for PR on branch: ${branch}`);

            const { data: prs } = await github.rest.pulls.list({
              owner: context.repo.owner,
              repo: context.repo.repo,
              head: `${context.repo.owner}:${branch}`,
              state: 'open'
            });

            if (prs.length > 0) {
              const pr = prs[0];
              console.log(`Found PR #${pr.number}: ${pr.title}`);
              core.setOutput('pr_number', pr.number);
              core.setOutput('pr_exists', 'true');
              return pr.number;
            } else {
              console.log('No open PR found');
              core.setOutput('pr_exists', 'false');
              return null;
            }

      - name: Request CodeX Review
        if: steps.find-pr.outputs.pr_exists == 'true'
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const prNumber = ${{ steps.find-pr.outputs.pr_number }};

            // Check if we already requested a review recently
            const { data: comments } = await github.rest.issues.listComments({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: prNumber,
              per_page: 10
            });

            const recentReviewRequest = comments.find(comment =>
              comment.body.includes('ü§ñ Automatic code review requested') &&
              (Date.now() - new Date(comment.created_at).getTime()) < 60000 // Within last minute
            );

            if (recentReviewRequest) {
              console.log('Review already requested recently, skipping duplicate request');
              return;
            }

            // Post comment to trigger review (if bot watches comments)
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: prNumber,
              body: `ü§ñ Automatic code review requested after push \`${context.sha.substring(0, 7)}\`

Commit: ${context.payload.head_commit?.message || 'N/A'}
Author: @${context.payload.head_commit?.author?.username || context.actor}`
            });

            console.log(`‚úÖ Review request posted to PR #${prNumber}`);

      - name: Request reviews from specific reviewers (optional)
        if: steps.find-pr.outputs.pr_exists == 'true' && vars.AUTO_REVIEWERS != ''
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const prNumber = ${{ steps.find-pr.outputs.pr_number }};
            const reviewers = '${{ vars.AUTO_REVIEWERS }}'.split(',').map(r => r.trim());

            try {
              await github.rest.pulls.requestReviewers({
                owner: context.repo.owner,
                repo: context.repo.repo,
                pull_number: prNumber,
                reviewers: reviewers
              });
              console.log(`‚úÖ Requested reviews from: ${reviewers.join(', ')}`);
            } catch (error) {
              console.log(`‚ÑπÔ∏è  Could not request reviewers: ${error.message}`);
            }
