from __future__ import annotations

from typing import Any, Iterable, Mapping, Sequence

__all__ = ["Table"]


class Table:
    columns: Sequence[str]

    def count(self) -> Table: ...

    def execute(self) -> Any: ...

    def distinct(self) -> Table: ...

    def select(self, *args: Any, **kwargs: Any) -> Table: ...

    def mutate(self, *args: Any, **kwargs: Any) -> Table: ...

    def filter(self, *predicates: Any, **kwargs: Any) -> Table: ...

    def drop(self, *columns: str) -> Table: ...

    def limit(self, n: int) -> Table: ...

    def order_by(self, *keys: Any, **kwargs: Any) -> Table: ...

    def schema(self) -> Mapping[str, Any]: ...

    def __getitem__(self, key: str) -> Any: ...

    def __getattr__(self, name: str) -> Any: ...

    def __iter__(self) -> Iterable[Any]: ...
